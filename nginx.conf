worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Optimize for high concurrency
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    
    # Buffer settings for large requests
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 16k;
    large_client_header_buffers 8 64k;
    
    # Timeout settings
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        application/json
        application/javascript
        text/css
        text/javascript
        text/plain
        text/xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream configuration for OCR services
    upstream ocr_backend {
        least_conn;  # Load balance based on least connections
        
        # Multiple OCR service instances
        server ocr-service:8000 max_fails=3 fail_timeout=30s;
        server ocr-service:8001 max_fails=3 fail_timeout=30s;
        server ocr-service:8002 max_fails=3 fail_timeout=30s;
        server ocr-service:8003 max_fails=3 fail_timeout=30s;
        
        # Health check
        keepalive 32;
    }

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Connection limiting
        limit_conn addr 20;

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://ocr_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Processing endpoint (strict rate limiting)
        location /process-insurance-certificate {
            # Rate limiting
            limit_req zone=upload burst=5 nodelay;
            
            # Proxy to backend
            proxy_pass http://ocr_backend/process-insurance-certificate;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for long-running requests
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Status endpoint (moderate rate limiting)
        location ~ ^/status/(.+)$ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://ocr_backend/status/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Fast timeouts for status checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # API documentation and other endpoints
        location / {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://ocr_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Error pages
        error_page 429 /rate_limit.html;
        error_page 503 /maintenance.html;
        error_page 502 504 /backend_error.html;

        location = /rate_limit.html {
            internal;
            return 429 '{"error": "Rate limit exceeded. Please try again later."}';
            add_header Content-Type application/json;
        }

        location = /maintenance.html {
            internal;
            return 503 '{"error": "Service temporarily unavailable. Please try again later."}';
            add_header Content-Type application/json;
        }

        location = /backend_error.html {
            internal;
            return 502 '{"error": "Backend service error. Please try again later."}';
            add_header Content-Type application/json;
        }
    }

    # Monitoring endpoints
    server {
        listen 8080;
        server_name localhost;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
        }

        location /health_detailed {
            return 200 '{"status": "healthy", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
} 